name = "Respuestas")
names(r.im)
m1 <- ppm(Q = puntos.ppp,
trend = ~ Var.1,
covariates = r.im)
m1
summary(m1)
m2 <- ppm(Q = puntos.ppp,
trend = ~ Var.2,
covariates = r.im)
m3 <- ppm(Q = puntos.ppp,
trend = ~ Var.3,
covariates = r.im)
m2 <- ppm(Q = puntos.ppp,
trend = ~ Var.2,
covariates = r.im)
m3 <- ppm(Q = puntos.ppp,
trend = ~ Var.3,
covariates = r.im)
AIC(m1, m2, m3)
AIC(m1)
AIC(m2)
AIC(m3)
m2 <- ppm(Q = puntos.ppp,
trend = ~ Var.2,
covariates = r.im)
m3 <- ppm(Q = puntos.ppp,
trend = ~ Var.3,
covariates = r.im)
AIC(m1); AIC(m2); AIC(m3)
plot(m3)
plot(m3, trend = T)
plot(m3, trend = T, se = F)
knitr::opts_chunk$set(dev = 'pdf')
library(raster); library(rgdal); library(foreach); library(spatstat)
archivos <- list.files("Datos-ejemplos/", "tif",
full.names = T,
recursive = F)
r <- stack(archivos)
centroide <- cellStats(r, mean)
s.df <- data.frame(rasterToPoints(r))
covar <- cov(s.df[, 3:5])
md <- mahalanobis(s.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
centroide <- cellStats(r, mean)
r.df <- data.frame(rasterToPoints(r))
covar <- cov(r.df[, 3:5])
md <- mahalanobis(r.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
plot(md.r)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
md.exp <- exp(-0.5*md.r)
plot(md.exp)
install.packages("dismo")
install.packages("dismo")
install.packages("dismo")
knitr::opts_chunk$set(dev = 'pdf')
set.seed(182)
puntos.2 <- dismo::randomPoints(mask = md.exp,
n = 200,
prob = T)
puntos.2 <- data.frame(puntos.2)
puntos.2$x <- puntos.2$x + rnorm(200, 0, 0.05)
puntos.2$y <- puntos.2$y + rnorm(200, 0, 0.05)
plot(md.exp); points(puntos.2)
source("Funciones-spatstat/imFromStack.R")
source("Funciones-spatstat/winFromRaster.R")
source("Funciones-spatstat/plotQuantIntens.R")
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
Q <- pixelquad(X = puntos.2.ppp, W = as.owin(w))
K <- envelope(puntos.2.ppp, fun = Kest, nsim = 39)
plot(K)
plot(K)
source("../Funciones-spatstat/plotQuantIntens.R")
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Responses-centroid")
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Respuestas-centroide")
knitr::opts_chunk$set(dev = 'pdf')
knitr::include_graphics("Figuras/Centroide.png")
library(raster); library(rgdal); library(foreach); library(spatstat)
archivos <- list.files("Datos-ejemplos/", "tif",
full.names = T,
recursive = F)
r <- stack(archivos)
centroide <- cellStats(r, mean)
r.df <- data.frame(rasterToPoints(r))
covar <- cov(r.df[, 3:5])
md <- mahalanobis(r.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
md.exp <- exp(-0.5*md.r)
plot(md.exp)
set.seed(182)
puntos.2 <- dismo::randomPoints(mask = md.exp,
n = 200,
prob = T)
puntos.2 <- data.frame(puntos.2)
puntos.2$x <- puntos.2$x + rnorm(200, 0, 0.05)
puntos.2$y <- puntos.2$y + rnorm(200, 0, 0.05)
plot(md.exp); points(puntos.2)
source("Funciones-spatstat/imFromStack.R")
source("Funciones-spatstat/winFromRaster.R")
source("Funciones-spatstat/plotQuantIntens.R")
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
Q <- pixelquad(X = puntos.2.ppp, W = as.owin(w))
K <- envelope(puntos.2.ppp, fun = Kest, nsim = 39)
plot(K)
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Respuestas-centroide")
curve(exp(1 + x - x^2), from = -3, 3)
pairs(r)
AIC(m1); AIC(m2)
m1 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im)
m2 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = s.im)
m1 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im)
m2 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im)
AIC(m1); AIC(m2)
AIC(m1); AIC(m2)
summary(m1)
summary(m1)
diagnose.ppm(m1, main = "", cex.axis = 0.5)
diagnose.ppm(m2, main = "", cex.axis = 0.5)
K1 <- envelope(m1, fun = Kenv, nsim = 39)
K1 <- envelope(m1, fun = Kest, nsim = 39)
K2 <- envelope(m2, fun = Kest, nsim = 39)
plot(K1)
plot(K2)
plot(m1, se = F)
plot(m1, se = F, main = "")
pred <- predict(m1)
pred.r <- raster(pred)
writeRaster(pred.r, "Predicción-m1", "GTiff")
diagnose.ppm(m2, main = "", cex.axis = 0.5)
diagnose.ppm(m1, main = "", cex.axis = 0.5)
diagnose.ppm(m2, main = "", cex.axis = 0.5)
par(mar = c(2,2,2,2))
diagnose.ppm(m2, main = "", cex.axis = 0.5)
knitr::opts_chunk$set(dev = 'pdf')
library(raster); library(rgdal); library(foreach); library(spatstat)
archivos <- list.files("Datos-ejemplos/", "tif",
full.names = T,
recursive = F)
r <- stack(archivos)
centroide <- cellStats(r, mean)
r.df <- data.frame(rasterToPoints(r))
covar <- cov(r.df[, 3:5])
md <- mahalanobis(r.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
md.exp <- exp(-0.5*md.r)
plot(md.exp)
set.seed(182)
puntos.2 <- dismo::randomPoints(mask = md.exp,
n = 200,
prob = T)
puntos.2 <- data.frame(puntos.2)
puntos.2$x <- puntos.2$x + rnorm(200, 0, 0.05)
puntos.2$y <- puntos.2$y + rnorm(200, 0, 0.05)
source("Funciones-spatstat/imFromStack.R")
source("Funciones-spatstat/winFromRaster.R")
source("Funciones-spatstat/plotQuantIntens.R")
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
Q <- pixelquad(X = puntos.2.ppp, W = as.owin(w))
K <- envelope(puntos.2.ppp, fun = Kest, nsim = 39)
plot(K)
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Respuestas-centroide")
m1 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im)
m2 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im)
AIC(m1); AIC(m2)
AIC(m1); AIC(m2)
summary(m1)
sum.m1 <- summary(m1)
sum.m1$coefs.SE.CI
K1 <- envelope(m1, fun = Kest, nsim = 39)
K2 <- envelope(m2, fun = Kest, nsim = 39)
rr <- data.frame(r=seq(0.5,5,by=0.5))
p <- profilepl(rr, AreaInter, puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, AreaInter,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, AreaInter,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 1)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 1)
plot(p)
plot(p, main = "")
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 1)
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
Strauss(4)) #Interacción
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
Strauss(4), rbord = 1) #Interacción
par(mar = c(2,2,2,2)); diagnose.ppm(m1.int, main = "")
m1.int
sum.int <- summary(m1.int)
sum.int <- summary(m1.int)
sum.int$coefs.SE.CI
coef(m1)
coef(m1.int)
sum.int
sum.int$coefs.SE.CI
plot(m1.int, se = F)
plot(m1.int, se = F)
sum.int <- summary(m1.int)
knitr::kable(sum.int$coefs.SE.CI[, c(1, 2, 5)])
knitr::opts_chunk$set(dev = 'pdf')
library(raster); library(rgdal); library(foreach); library(spatstat)
archivos <- list.files("Datos-ejemplos/", "tif",
full.names = T,
recursive = F)
r <- stack(archivos)
centroide <- cellStats(r, mean)
r.df <- data.frame(rasterToPoints(r))
covar <- cov(r.df[, 3:5])
md <- mahalanobis(r.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
md.exp <- exp(-0.5*md.r)
plot(md.exp)
set.seed(182)
puntos.2 <- dismo::randomPoints(mask = md.exp,
n = 200,
prob = T)
puntos.2 <- data.frame(puntos.2)
puntos.2$x <- puntos.2$x + rnorm(200, 0, 0.05)
puntos.2$y <- puntos.2$y + rnorm(200, 0, 0.05)
plot(md.exp); points(puntos.2)
source("Funciones-spatstat/imFromStack.R")
source("Funciones-spatstat/winFromRaster.R")
source("Funciones-spatstat/plotQuantIntens.R")
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
Q <- pixelquad(X = puntos.2.ppp, W = as.owin(w))
K <- envelope(puntos.2.ppp, fun = Kest, nsim = 39)
curve(exp(1 + x - x^2), from = -3, 3)
pairs(r)
m1 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im)
m2 <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im)
AIC(m1); AIC(m2)
sum.m1 <- summary(m1)
sum.m1$coefs.SE.CI
K1 <- envelope(m1, fun = Kest, nsim = 39)
K2 <- envelope(m2, fun = Kest, nsim = 39)
plot(K1, cex = 0.5)
plot(K2, cex = 0.5)
plot(m1, se = F, main = "")
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 1)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, AreaInter,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 1)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, AreaInter,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 0.5)
plot(p, main = "")
p
profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=TRUE, rbord = 0.5)
profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=F, rbord = 0.5)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, AreaInter,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=T, rbord = 0.5)
p
plot(p, main = "")
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
AreaInter(2), rbord = 1) #Interacción
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
AreaInter(2), rbord = 0.5) #Interacción
sum.int <- summary(m1.int)
knitr::kable(sum.int$coefs.SE.CI[, c(1, 2, 5)])
m1.int
summary(m1.int)
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
AreaInter(2), rbord = 1) #Interacción
summary(m1.int)
sum.int$coefs.SE.CI[, c(1, 2, 5)]
sum.int <- summary(m1.int)
sum.int
sum.int <- summary(m1.int)
knitr::kable(sum.int$coefs.SE.CI[, c(1, 2, 5)])
sum.int$coefs.SE.CI
par(mfrow = c(1, 2)); plot(m1.int, se = F)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=T, rbord = 0.5)
p$iopt
plot(p, main = "")
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=F, rbord = 0.5)
p
plot(p, main = "")
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
Strauss(p$iopt), rbord = 1) #Interacción
sum.int <- summary(m1.int)
knitr::kable(sum.int$[, c(1, 2, 5)])
sum.int <- summary(m1.int)
knitr::kable(sum.int$coefs.SE.CI[, c(1, 2, 5)])
coef(m1)
coef(m1.int)
par(mfrow = c(1, 2)); plot(m1.int, se = F)
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=T, rbord = 1)
plot(p, main = "")
plot(p, main = "")
rr <- data.frame(r=seq(1,5,by=1))
p <- profilepl(rr, Strauss,
puntos.2.ppp ~ Var.1 + Var.3 + I(Var.1^2) + I(Var.3^2),
covariates = r.im, aic=T, rbord = 0.5)
plot(p, main = "")
m1.int <- ppm(Q = puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
Strauss(p$iopt), rbord = 1) #Interacción
sum.int <- summary(m1.int)
knitr::kable(sum.int$coefs.SE.CI[, c(1, 2, 5)])
coef(m1)
coef(m1.int)
par(mfrow = c(1, 2)); plot(m1.int, se = F)
par(mfrow = c(1, 2)); plot(m1.int, se = F, trend = T, cif = F)
plot(m1.int, se = F, trend = T, cif = F)
m1.lgcp <- kppm(puntos.2.ppp[[i]],
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
statistic = "K", # K de Ripley
method = "mincon", # Contraste con K
model = "exp") # Modelo de varianza
m1.lgcp <- kppm(puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
statistic = "K", # K de Ripley
method = "mincon", # Contraste con K
model = "exp") # Modelo de varianza
m1.lgcp
sum.lgcp <- summary(m1.lgcp)
sum.lgcp
sum.lgcp <- summary(m1.lgcp)
knitr::kable(sum.lgcp$coefs.SE.CI[, c(1, 2, 5)])
coef(m1)
coef(m1.lgcp)
plot(m1.lgcp)
m1.lgcp$clusters
m1.lgcp$Fit
m1.lgcp$Fit$Stat
m1.lgcp$Fit$maxlogcl
m1.lgcp$Fit$mcfit
m1.lgcp$Fit$mcfit$fit
m1.lgcp$Fit$mcfit$par
par(mfrow = c(1,2))
plot(m1.lgcp)
par(mfrow = c(1,2))
plot(m1.lgcp)
plot(predict.kppm(m1.lgcp))
diagnose.ppm(m1.lgcp)
m1.lgcp <- kppm(puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
"LGCP",
statistic = "K", # K de Ripley
method = "mincon", # Contraste con K
model = "exp") # Modelo de varianza
install.packages("RandomFieldsUtils")
m1.lgcp <- kppm(puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
"LGCP",
statistic = "K", # K de Ripley
method = "mincon", # Contraste con K
model = "exp") # Modelo de varianza
install.packages("RandomFields")
m1.lgcp <- kppm(puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
"MatClust",
statistic = "K", # K de Ripley
method = "mincon", # Contraste con K
model = "exp") # Modelo de varianza
sum.lgcp <- summary(m1.lgcp)
knitr::kable(sum.lgcp$coefs.SE.CI[, c(1, 2, 5)])
par(mfrow = c(1,2))
plot(m1.lgcp)
diagnose.ppm(m1.lgcp)
sum.lgcp <- summary(m1.lgcp)
knitr::kable(sum.lgcp$coefs.SE.CI[, c(1, 2, 3, 4 5)])
sum.lgcp <- summary(m1.lgcp)
knitr::kable(sum.lgcp$coefs.SE.CI[, c(1, 2, 3, 4, 5)])
knitr::kable(sum.m1$coefs.SE.CI[, c(1, 2, 3, 4)])
knitr::kable(sum.m1$coefs.SE.CI[, c(1, 2, 3, 4, 5)])
sum.lgcp <- summary(m1.lgcp)
knitr::kable(sum.lgcp$coefs.SE.CI[, c(1, 2, 3, 4)])
knitr::kable(sum.m1$coefs.SE.CI[, c(1, 2, 3, 4)])
m1.lgcp <- kppm(puntos.2.ppp,
trend = ~ Var.2 + Var.3 + I(Var.2^2) + I(Var.3^2),
covariates = r.im,
"LGCP",
statistic = "K", # K de Ripley
method = "mincon", # Contraste con K
model = "matern") # Modelo de varianza
info()
R
R()
knitr::opts_chunk$set(dev = 'pdf')
library(raster); library(rgdal); library(foreach); library(spatstat)
archivos <- list.files("Datos-ejemplos/", "tif",
full.names = T,
recursive = F)
r <- stack(archivos)
centroide <- cellStats(r, mean)
r.df <- data.frame(rasterToPoints(r))
covar <- cov(r.df[, 3:5])
md <- mahalanobis(r.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
md.exp <- exp(-0.5*md.r)
plot(md.exp)
install.packages("RandomFieldsUtils")
install.packages("RandomFields")
install.packages("~/Descargas/RandomFields_3.3.tar.gz", repos = NULL, type = "source")
install.packages(c("raster", "rgdal", "spatstat", "RandomFieldsUtils", "dismo"))
