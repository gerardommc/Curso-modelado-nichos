install.packages("prettydoc")
x1 <- rnorm(100)
plot(density(x), col = "red")
x1 <- rnorm(100)
plot(density(x1), col = "red")
abline(v = mean(x1), col = "red")
x1 <- rnorm(100)
plot(density(x1), col = "red")
abline(v = mean(x1), col = "red")
set.seed(5145)
x1 <- rnorm(100)
plot(density(x1), col = "red")
abline(v = mean(x1), col = "red")
x1.1 <- exp(x1)
plot(density(x1.1), col = "red", xlab = "x", ylab = "Densidad")
abline(v = mean(x1.1))
x1.1 <- exp(x1)
plot(density(x1.1), col = "red", xlab = "x", ylab = "Densidad")
abline(v = mean(x1.1), col = "red", lty = 3)
set.seed(5145)
x1 <- rnorm(100)
plot(density(x1), col = "red", xlab = "x", ylab = "Densidad")
abline(v = mean(x1), col = "red", lty = 3)
knitr::opts_chunk$set(dev = 'pdf')
plot(r[[1]])
archivos <- list.files("Datos-ejemplos/", "tif", full.names = T, recursive = F)
r <- stack(archivos)
library(spatstat)
library(rgdal)
install.packages("rgdal")
install.packages("spatstat")
library(spatstat)
library(rgdal)
library(raster)
archivos <- list.files("Datos-ejemplos/", "tif", full.names = T, recursive = F)
r <- stack(archivos)
plot(r[[1]])
class(r)
source("Funciones-spatstat/imFromStack.R")
r.im <- imFromStack(r)
library(rgdal)
library(raster)
library(foreach)
r.im <- imFromStack(r)
source("Funciones-spatstat/winFromRaster.R")
w <- winFromRaster(r)
class(w)
coordinates(r)
nrow(coordinates(r))
puntos <- data.frame(coordinates(r)[sample(1:200, 200)])
puntos$x <- puntos$x + rnorm(200, 0, 0.05)
puntos <- data.frame(coordinates(r)[sample(1:200, 200)])
puntos <- data.frame(coordinates(r)[sample(1:200, 200),])
puntos$x <- puntos$x + rnorm(200, 0, 0.05)
puntos$y <- puntos$y + rnorm(200, 0, 0.05)
set.seed(984573)
puntos <- data.frame(coordinates(r)[sample(1:200, 200),])
puntos$x <- puntos$x + rnorm(200, 0, 0.05)
puntos$y <- puntos$y + rnorm(200, 0, 0.05)
puntos.ppp <- ppp(x = puntos$x,
y = puntos$y,
window = win,
check = F)
source("Funciones-spatstat/winFromRaster.R")
w <- winFromRaster(r)
class(w)
puntos.ppp <- ppp(x = puntos$x,
y = puntos$y,
window = w,
check = F)
class(puntos.ppp)
plot(puntos.ppp)
set.seed(984573)
puntos <- data.frame(coordinates(r)[sample(1:200, 200),])
puntos$x <- puntos$x + rnorm(200, 0, 0.05)
puntos$y <- puntos$y + rnorm(200, 0, 0.05)
plot(r[[1]])
points(puntos)
puntos <- data.frame(coordinates(r))
plot(r[[1]])
points(puntos)
set.seed(984573)
puntos <- data.frame(coordinates(r)[sample(1:840, 200),])
puntos$x <- puntos$x + rnorm(200, 0, 0.05)
puntos$y <- puntos$y + rnorm(200, 0, 0.05)
plot(r[[1]])
points(puntos)
plot(puntos.ppp)
plot(puntos.ppp)
puntos.ppp <- ppp(x = puntos$x,
y = puntos$y,
window = w,
check = F)
class(puntos.ppp)
plot(puntos.ppp)
K <- envelope(puntos.ppp, fun = Kest, nsim = 39)
plot(K)
Q <- pixelquad(X = puntos.ppp, W = as.owin(w))
source("Funciones-spatstat/plotQuantIntens.R")
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Respuestas")
Q <- pixelquad(X = puntos.ppp, W = as.owin(w))
source("Funciones-spatstat/plotQuantIntens.R")
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.ppp,
dir = "",
name = "Respuestas")
names(r.im)
m1 <- ppm(Q = puntos.ppp,
trend = ~ Var.1,
covariates = r.im)
m1
summary(m1)
m2 <- ppm(Q = puntos.ppp,
trend = ~ Var.2,
covariates = r.im)
m3 <- ppm(Q = puntos.ppp,
trend = ~ Var.3,
covariates = r.im)
m2 <- ppm(Q = puntos.ppp,
trend = ~ Var.2,
covariates = r.im)
m3 <- ppm(Q = puntos.ppp,
trend = ~ Var.3,
covariates = r.im)
AIC(m1, m2, m3)
AIC(m1)
AIC(m2)
AIC(m3)
m2 <- ppm(Q = puntos.ppp,
trend = ~ Var.2,
covariates = r.im)
m3 <- ppm(Q = puntos.ppp,
trend = ~ Var.3,
covariates = r.im)
AIC(m1); AIC(m2); AIC(m3)
plot(m3)
plot(m3, trend = T)
plot(m3, trend = T, se = F)
knitr::opts_chunk$set(dev = 'pdf')
library(raster); library(rgdal); library(foreach); library(spatstat)
archivos <- list.files("Datos-ejemplos/", "tif",
full.names = T,
recursive = F)
r <- stack(archivos)
centroide <- cellStats(r, mean)
s.df <- data.frame(rasterToPoints(r))
covar <- cov(s.df[, 3:5])
md <- mahalanobis(s.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
centroide <- cellStats(r, mean)
r.df <- data.frame(rasterToPoints(r))
covar <- cov(r.df[, 3:5])
md <- mahalanobis(r.df[, 3:5], center = centroide, cov = covar)
head(md)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
plot(md.r)
md.r <- rasterFromXYZ(data.frame(r.df[, 1:2], md))
md.exp <- exp(-0.5*md.r)
plot(md.exp)
install.packages("dismo")
install.packages("dismo")
install.packages("dismo")
knitr::opts_chunk$set(dev = 'pdf')
set.seed(182)
puntos.2 <- dismo::randomPoints(mask = md.exp,
n = 200,
prob = T)
puntos.2 <- data.frame(puntos.2)
puntos.2$x <- puntos.2$x + rnorm(200, 0, 0.05)
puntos.2$y <- puntos.2$y + rnorm(200, 0, 0.05)
plot(md.exp); points(puntos.2)
source("Funciones-spatstat/imFromStack.R")
source("Funciones-spatstat/winFromRaster.R")
source("Funciones-spatstat/plotQuantIntens.R")
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
r.im <- imFromStack(r)
w <- winFromRaster(r)
puntos.2.ppp <- ppp(x = puntos.2$x,
y = puntos.2$y,
window = w,
check = F)
Q <- pixelquad(X = puntos.2.ppp, W = as.owin(w))
K <- envelope(puntos.2.ppp, fun = Kest, nsim = 39)
plot(K)
plot(K)
source("../Funciones-spatstat/plotQuantIntens.R")
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Responses-centroid")
plotQuantIntens(imList = r.im,
noCuts = 5,
Quad = Q,
p.pp = puntos.2.ppp,
dir = "",
name = "Respuestas-centroide")
